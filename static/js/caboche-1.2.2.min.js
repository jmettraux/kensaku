/* caboche-1.2.2.min.js | MIT license: http://github.com/jmettraux/caboche/LICENSE.txt */
var Caboche=(function(){var g="1.2.2";var c=1000;var b=[];var d=null;function e(j,l){if(j!==d[0]){throw ("loadDone("+j+") vs currentEntry [ "+d[0]+" ]")}var k=d.indexOf(l);if(k<0){throw ("couldn't find "+JSON.stringify(l)+" in "+JSON.stringify(d))}d.splice(k,1);if(d.length<2){d=null;window.setTimeout(function(){h(j)},10)}}function f(){var k=d[0];for(var n=0,j=d.length;n<j;n++){var p=d[n];var m=(typeof p);if(m==="number"){continue}if(m==="function"){p();e(k,p)}else{var o=document.createElement("script");o.src=p;o.onload=o.onerror=function(){e(k,p)};document.getElementsByTagName("head")[0].appendChild(o)}}}function a(){var j=[c+1,-1];var k=-1;while(true){k=k+1;var l=b[k];if(!l){break}if(l[0]>=j[0]){continue}j=[l[0],k]}if(j[1]<0){return null}return b.splice(j[1],1)[0]}function h(i){if(d){return}d=a();if(d){f()}}this.phase=function(){var j=[];for(var k in arguments){j.push(arguments[k])}b.push(j);window.setTimeout(h,10)};this.last=function(){var j=[c];for(var k in arguments){j.push(arguments[k])}Caboche.phase.apply(null,j)};return this}).apply({});
/* compressed from commit b1d5196 */
