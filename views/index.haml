
#content

  #search
    %input#query{ :type => :text }
    %span.clear
      X

  #results

:javascript

  Caboche.last(function() {

    var $query = $('#query');
    var $results = $('#results');

    $query.attr('autocapitalize', 'off');
    $query.attr('autocomplete', 'off');
    $query.attr('autocorrect', 'off');
    $query.attr('spellcheck', 'false');

    var displayResults = function(query, results) {

      if (results === []) return;

      $results.empty();

      var cols = 0;
      var dcols = Fb.c($results, 'div.cols');
      Nu.each(results, function(entry) {
        if (cols > 6) return;
        if (entry.ki.length < 1) return;
        cols = cols + 1;
        var $col = dcols.div('.col', entry.ki[0]).$;
        $col.on('click', function(ev) {
          window.location.href = '#' + entry.li;
        });
      });

      Nu.each(results, function(entry) {

        var e = Fb.c($results, '#' + entry.li + '.entry');

        $(e).attr('data-ks-query', query);

        var ki = e.div('.ki');
        var ka = e.div('.ka');
        Nu.each(entry.ki, function(kanji) { ki.div('.kanji', kanji); });
        Nu.each(entry.ka, function(kana) { ka.div('.kana', kana); });

        e.span('.add', { 'data-ks-line': entry.li }, 'â™»')

        var gs = e.div('.gs')
        Nu.each(entry.gs, function(gloss) { gs.div('.gloss', gloss); });
      });
    };

    $query.on('keyup', function(ev) {

      var q = $.trim($query.val());

      if (q === '') {
        displayResults('', []);
        return;
      }

      $.ajax({
        url: '/query/' + q,
        success: function(data) { displayResults(q, data); }
      });
    });

    $('.clear').on('click', function(ev) {

      $query.val('');
      displayResults('', []);
      $query.focus();
    });

    window.setTimeout(function() {
      //window.scrollTo(0, 1);
      $query.focus();
    }, 0);
  });

